[{"/Users/kay/react/react-moveable/src/App.tsx":"1","/Users/kay/react/react-moveable/src/index.tsx":"2","/Users/kay/react/react-moveable/src/Moveable.tsx":"3","/Users/kay/react/react-moveable/src/useInputText.ts":"4","/Users/kay/react/react-moveable/src/useinputtext.ts":"5"},{"size":817,"mtime":1610866716293,"results":"6","hashOfConfig":"7"},{"size":146,"mtime":1610824437737,"results":"8","hashOfConfig":"7"},{"size":2868,"mtime":1610887443063,"results":"9","hashOfConfig":"7"},{"size":249,"mtime":1610868872277,"results":"10","hashOfConfig":"7"},{"size":157,"mtime":1610866973755,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ugm3u7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kay/react/react-moveable/src/App.tsx",[],"/Users/kay/react/react-moveable/src/index.tsx",[],"/Users/kay/react/react-moveable/src/Moveable.tsx",["23","24","25"],"import React, { FC, useState, useEffect, useCallback, useMemo } from 'react';\nimport Styled from 'styled-components';\n\nimport MoveableBox from 'react-moveable';\n\nimport { useInputText } from './useInputText';\n\nconst Wrapper = Styled.div<{ color: string }>`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: start;\n\t.moveable {\n\t\tcursor: move;\n\t\tbackground-color: ${(props) => '#' + props.color}\n\t}\n\t.moveable-control-box {\n\t\t--moveable-color: #F00;\n\t\t.moveable-n, .moveable-s {\n\t\t\twidth: 26px;\n\t\t\theight: 8px;\n\t\t\tborder-radius: 0;\n\t\t\tmargin-top: -4px;\n\t\t\tmargin-left: -13px;\n\t\t\tbackground-color: #FFF;\n\t\t\tborder: solid 1px #F00;\n\t\t}\n\t\t.moveable-w, .moveable-e {\n\t\t\twidth: 8px;\n\t\t\theight: 26px;\n\t\t\tborder-radius: 0;\n\t\t\tmargin-top: -13px;\n\t\t\tmargin-left: -4px;\n\t\t\tbackground-color: #FFF;\n\t\t\tborder: solid 1px #F00;\n\t\t}\n\t\t.moveable-rotation-control {\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-left: -5px;\n\t\t}\n\t\t.moveable-nw, .moveable-sw, .moveable-ne, .moveable-se {\n\t\t\tborder: none;\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-top: -5px;\n\t\t\tmargin-left: -5px;\n\t\t}\n}`;\n\nconst Box = Styled.div`\n\twidth: 100px;\n\theight: 100px;\n\tfont-size: 13px;\n\tfont-weight: bold;\n\t}\n`;\n\nconst FormBox = Styled.div`\n\tmargin: 10px;\n\tbackground-color: #DDD;\n`;\n\nconst Label = Styled.label`\n\tfont-size: 15px;\n`;\n\nconst TextInput = Styled.input`\n\twidth: 100px;\n\tborder: solid 1px #AAA;\n\tborder-radius: 5px;\n`;\n\nconst MoveableArea = Styled.div`\n\twidth: 100%;\n\theight: 1000px;\n\tborder: solid 2px #333;\n`;\n\nconst Moveable: FC = () => {\n  const [target, setTarget] = useState(document.querySelector('.moveable'));\n  const { text, onChange } = useInputText('');\n  const { text: color, onChange: onChangeColor } = useInputText('');\n\n  useEffect(() => {\n    setTarget(document.querySelector('.moveable'));\n  }, []);\n\n  return (\n    <Wrapper color={color}>\n      <FormBox>\n        <FormBox>\n          <Label>テキスト：</Label>\n          <TextInput type='text' onChange={useMemo(() => onChange, [text])} />\n        </FormBox>\n        <FormBox>\n          <Label>背景色：#</Label>\n          <TextInput type='text' onChange={useMemo(() => onChangeColor, [color])} />\n        </FormBox>\n      </FormBox>\n      <MoveableArea>\n        <Box className={'moveable'}>{text}</Box>\n        <MoveableBox\n          //@ts-ignore\n          target={target}\n          draggable={true}\n          scalable={true}\n          rotatable={true}\n          origin={false}\n          throttleRotate={0}\n          onDrag={(e) => {\n            e.target.style.transform = e.transform;\n          }}\n          onScale={(e) => {\n            e.target.style.transform = e.transform;\n          }}\n          onRotate={(e) => {\n            e.target.style.transform = e.transform;\n          }}\n        />\n      </MoveableArea>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(Moveable);\n","/Users/kay/react/react-moveable/src/useInputText.ts",["26"],"/Users/kay/react/react-moveable/src/useinputtext.ts",[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":42,"nodeType":"29","messageId":"30","endLine":1,"endColumn":53},{"ruleId":"31","severity":1,"message":"32","line":95,"column":68,"nodeType":"33","endLine":95,"endColumn":74,"suggestions":"34"},{"ruleId":"31","severity":1,"message":"35","line":99,"column":73,"nodeType":"33","endLine":99,"endColumn":80,"suggestions":"36"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":20,"nodeType":"29","messageId":"30","endLine":1,"endColumn":31},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'onChange'. Either include it or remove the dependency array.","ArrayExpression",["37"],"React Hook useMemo has a missing dependency: 'onChangeColor'. Either include it or remove the dependency array.",["38"],{"desc":"39","fix":"40"},{"desc":"41","fix":"42"},"Update the dependencies array to be: [onChange]",{"range":"43","text":"44"},"Update the dependencies array to be: [onChangeColor]",{"range":"45","text":"46"},[2002,2008],"[onChange]",[2154,2161],"[onChangeColor]"]